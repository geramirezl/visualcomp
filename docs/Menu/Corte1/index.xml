<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Showcase Template</title><link>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/</link><description>Recent content on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej1/</guid><description> Ejercicio 1 # Study, implement and discuss possible applications of some known visual phenomena and optical illusions.
Optical Ilussions # Simple # Complex #</description></item><item><title/><link>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej2/</guid><description> Ejercicio 2 # Implement a color mapping application that helps people who are color blind see the colors around them.
Mapping Application #</description></item><item><title/><link>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej3/</guid><description>Ejercicio 3 # Implement a pixelator video application and perform a benchmark of the results (color avg vs spatial coherence). How would you assess the visual quality of the results?
Spatial Coherence # En este ejemplo, implementamos una aplicación de pixelator para video, usando la captura de la videocamara. Para pixelar se usaron las dos diferentes formas o técnicas que se planteaban (promedio de color y coherencia espacial).
Color AVG # Cada color pixelado se calcula con el promedio de los colores en el grupo de la imagen original.</description></item><item><title/><link>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej4/</guid><description>Ejercicio 4 # Develop a terrain visualization application. Check out the 3D terrain generation with Perlin noise coding train tutorial.
Mach bands # En el ejercicio que vamos a utilizar usamos la ilusion de contraste para la percepcion de la profundidad.
Terrain with Perlin noise # Siguiendo el tutorial, creamos una malla de triangulos, y darle diversas alturas usando el Perlin noise, el cual es una lista aleatoria de numeros manteniendo una relacion entre los numeros cercanos, lo que hace que el terreno parezca realista y al mismo tiempo sea parcialmente infinito.</description></item><item><title/><link>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej5/</guid><description>Ejercicio 5 # Implement a kinegram and some moiré patterns which are close related visual phenomena to masking.
Visual masking # Un Kinegram es un fenomeno visual, donde utilizando una banda de mascara, al moverla sobre una imagen fija de fondo se crea una animacion de movimiento o diferencia entre ambos frames.
En el ejercicio que implementamos tenemos 4 ejemplos de como funcionan estas mascaras.
Mascara movimiento # En la esquina superior derecha tenemos 2 mascaras de diversos tamaños y direcciones cruzando entre si, lo que genera un patron que se repite.</description></item><item><title/><link>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://geramirezl.github.io/visualcomp/docs/Menu/Corte1/ej6/</guid><description>Ejercicio 6 # Implement an animation with keyframes.
Temporal Coherence # Temporal coherence is the visual phenomenon present all across nature whereby the perceived color of a given point within a region of interest tend to vary more according to the elapsed time passed between two given moments. KeyFrames
Los KeyFrames, o frames clave son puntos en la animacion que marcan el inicio y el final de una transicion, siendo la transicion que vera el espectador la variacion de un key frame a otro, llenando de pormedio la transicion con frames conocidos como &amp;ldquo;inbetweens&amp;rdquo;.</description></item></channel></rss>